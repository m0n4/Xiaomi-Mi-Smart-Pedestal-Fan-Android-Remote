"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.hexdump = void 0;
const debug_1 = __importDefault(require("debug"));
const logger = debug_1.default("miio-api");
/**
 * Returns hex dump of provided binary data.
 *
 * @param buffer - data to dump
 * @param blockSize - number of bytes on line
 * @returns hex dump of `buffer` with `blockSize` bytes per line.
 */
function hexdump(buffer, blockSize = 16) {
    const lines = [];
    for (let i = 0; i < buffer.length; i += blockSize) {
        const block = buffer.slice(i, Math.min(i + blockSize, buffer.length));
        const hex = block.toString("hex");
        const addr = ("0000" + i.toString(16)).slice(-4);
        let line = "";
        for (let j = 0; j < hex.length; j += 2) {
            line += hex[j] + hex[j + 1] + " ";
        }
        line += "  ".repeat(blockSize - block.length);
        lines.push(addr + "    " + line);
    }
    return lines.join("\n");
}
exports.hexdump = hexdump;
/**
 * Debug formatter for binary data.
 */
debug_1.default.formatters.H = (buffer) => {
    return hexdump(buffer);
};
exports.default = logger;
//# sourceMappingURL=logger.js.map