/**
 * Returns random interger between 0 and 4294967295.
 *
 * @returns random interger between 0 and 4294967295
 */
export declare function randomInt(): number;
/**
 * Returns random string of given length.
 *
 * @param n - length of string
 * @returns random string of length `n`
 */
export declare function randomString(n?: number): string;
/**
 * Sleeps for specified time.
 *
 * @param ms - duration in milliseconds
 * @returns `Promise` which will be resolved after `ms` milliseconds
 */
export declare function sleep(ms: number): Promise<void>;
/**
 * Retries the specified asynchronous function the given amount of times in case of fail.
 *
 * @param attemptFunc - asynchronous function which will be retried
 * @param attempts - retries count
 * @param delay - delay in milliseconds between retries
 * @returns result of `attemptFunc` in case of success and
 *    throws error if `attemptFunc` fails `attempts` times
 */
export declare function retry<T>(attemptFunc: () => Promise<T>, attempts?: number, delay?: number): Promise<T>;
